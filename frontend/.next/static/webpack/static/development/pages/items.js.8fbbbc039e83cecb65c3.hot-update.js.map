{"version":3,"file":"static/webpack/static/development/pages/items.js.8fbbbc039e83cecb65c3.hot-update.js","sources":["webpack:///./components/item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport formatMoney from '../lib/formatMoney';\nimport Title from './styles/Title'\nimport ItemStyles from './styles/ItemStyles';\nimport PriceTag from './styles/PriceTag';\n\nclass item extends Component {\n    static propTypes = {\n        item: PropTypes.object.isRequired,\n    }\n    render() {\n        const {item} = this.props;\n        return (\n            <ItemStyles>\n                <Title>\n                <Link href={{\n                    pathname: '/item',\n                    query: {id: item.id}\n                }} >\n                <a>{item.title}</a>\n                </Link>\n                </Title>\n                <PriceTag>{formatMoney(item.price)}</PriceTag>\n            </ItemStyles>\n        );\n    }\n}\n\n\nexport default item;","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAIA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAnBA;AACA;AADA;AAEA;AADA;AACA;AAqBA;;;;;;;;;;;;AC/BA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}